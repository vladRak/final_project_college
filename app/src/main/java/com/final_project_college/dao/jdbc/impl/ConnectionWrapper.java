package com.final_project_college.dao.jdbc.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Savepoint;

public class ConnectionWrapper implements AutoCloseable {

    private final Connection connection;
    private final String ERROR_MESSAGE = "Transaction does not finish";

    public ConnectionWrapper(Connection connection) {
        this.connection = connection;
    }

    public PreparedStatement prepareStatement(String statement) throws SQLException {
        return connection.prepareStatement(statement);
    }

    public PreparedStatement prepareStatement(String statement, int autoGeneratedKeys)
            throws SQLException {
        return connection.prepareStatement(statement, autoGeneratedKeys);
    }

    public Connection getConnection() {
        return connection;
    }

    public void close() throws SQLException {
        if (connection.getAutoCommit()) connection.close();
        else throw new SQLException(ERROR_MESSAGE);
    }

    public void setAutoCommit(boolean autoCommit) throws SQLException {
        connection.setAutoCommit(autoCommit);
    }

    public boolean getAutoCommit() throws SQLException {
        return connection.getAutoCommit();
    }

    public void commit() throws SQLException {
        connection.commit();
    }

    public Savepoint setSavepoint() throws SQLException {
        return connection.setSavepoint();
    }

    public Savepoint setSavepoint(String name) throws SQLException {
        return connection.setSavepoint(name);
    }

    public void rollback() throws SQLException {
        connection.rollback();
    }

    public void rollback(Savepoint savepoint) throws SQLException {
        connection.rollback(savepoint);
    }
}